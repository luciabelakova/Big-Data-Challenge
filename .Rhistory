plot(NA, xlim = c(30,311), ylim = c(0,16), type = "l", xlab = "", ylab = "log(COVID-19 cases)",
main = "Intermediate Lockdown Policy Countries ",  xaxt = "n", yaxt = "n", bty = "n", las = 1)
box(lty = 'solid', col = 'black')
legend("topright", c("Canada", "Poland", "Czech Republic", "Australia",
"United Kingdom", "Malaysia"), pch = c(19, 19, 19, 19, 19, 19),
col = colours1)
axis(2, seq(0, 14, by=2), seq(0, 14, by=2))
axis(1, seq(0, 311, by = 26), c("Nov '19", "Jan '20", "Feb '20", "Mar '20", "Apr '20", "May '20",
"Jun '20", "Jul '20", "Aug '20", "Sep '20", "Oct '20", "Nov '20"),
las = 2, hadj = 1)
points(log(separated.dt$Canada$cases), type = "l", col = generate.colors1[1])
points(log(separated.dt$Poland$cases), type = "l", col = generate.colors1[17])
points(log(separated.dt$Czechia$cases), type = "l", col = generate.colors1[34])
points(log(separated.dt$Australia$cases), type = "l", col = generate.colors1[69])
points(log(separated.dt$United_Kingdom$cases), type = "l", col = generate.colors1[85])
points(log(separated.dt$Malaysia$cases), type = "l", col = generate.colors1[99])
#===================================================================================================
# --countries with stringent lockdown policies
generate.colors = colorRampPalette(c("purple", "green"))(100)
colours = c(generate.colors[1], generate.colors[17], generate.colors[34],
generate.colors[69],generate.colors[85], generate.colors[99])
# We want tp custo
plot(NA, xlim = c(30,311), ylim = c(0,16), type = "l", xlab = "", ylab = "log(COVID-19 cases)",
main = "Full Lockdown Policy Countries ",  xaxt = "n", yaxt = "n", bty = "n", las = 1)
box(lty = 'solid', col = 'black')
legend("topright", c("India", "Singapore", "Italy", "New Zealand",
"South Africa", "Netherlands"), pch = c(19, 19, 19, 19, 19, 19),
col = colours)
axis(2, seq(0, 14, by=2), seq(0, 14, by=2))
axis(1, seq(0, 311, by = 26), c("Nov '19", "Jan '20", "Feb '20", "Mar '20", "Apr '20", "May '20",
"Jun '20", "Jul '20", "Aug '20", "Sep '20", "Oct '20", "Nov '20"),
las = 2, hadj = 1)
points(log(separated.dt$India$cases), type = "l", col = generate.colors[1])
points(log(separated.dt$Singapore$cases), type = "l", col = generate.colors[17])
points(log(separated.dt$Italy$cases), type = "l", col = generate.colors[34])
points(log(separated.dt$New_Zealand$cases), type = "l", col = generate.colors[69])
points(log(separated.dt$South_Africa$cases), type = "l", col = generate.colors[85])
points(log(separated.dt$Netherlands$cases), type = "l", col = generate.colors[99])
#========================================================================================
#--Countries with no lockdown policy--
# Generate a vector containing the colors for our different plots
generate.colors2 = colorRampPalette(c("brown", "orange"))(100)
# Now select a few colors from the vector we created
colours2 = c(generate.colors[1], generate.colors[17], generate.colors[34],
generate.colors[69],generate.colors[85], generate.colors[99])
plot(NA, xlim = c(30,311), ylim = c(0,16), type = "l", xlab = "", ylab = "log(COVID-19 cases)",
main = "No Lockdown Policy Countries ",  xaxt = "n", yaxt = "n", bty = "n", las = 1)
box(lty = 'solid', col = 'black')
legend("topright", c("Sweden", "Japan", "South Korea", "Taiwan",
"Tajikistan", "Brazil"), pch = c(19, 19, 19, 19, 19, 19),
col = colours2)
axis(2, seq(0, 14, by=2), seq(0, 14, by=2))
axis(1, seq(0, 311, by = 26), c("Nov '19", "Jan '20", "Feb '20", "Mar '20", "Apr '20", "May '20",
"Jun '20", "Jul '20", "Aug '20", "Sep '20", "Oct '20", "Nov '20"),
las = 2, hadj = 1)
points(log(separated.dt$Sweden$cases), type = "l", col = generate.colors[1])
points(log(separated.dt$Japan$cases), type = "l", col = generate.colors[17])
points(log(separated.dt$South_Korea$cases), type = "l", col = generate.colors[34])
points(log(separated.dt$Taiwan$cases), type = "l", col = generate.colors[69])
points(log(separated.dt$Tajikistan$cases), type = "l", col = generate.colors[85])
points(log(separated.dt$Brazil$cases), type = "l", col = generate.colors[99])
#Create the pdf file
dev.off()
# Visualize the RI values using a boxplot
# Load the data into R
ri.dt = read.csv(paste(path.cleaned,"RIdata.csv", sep = ""))
# Call the pdf command to start the plot
pdf(file = paste(path.figures,"RIvalues.pdf", sep = ""),   # The directory you want to save the file in
width = 10, # The width of the plot in inches
height = 7) # The height of the plot in inches
# Plot the box plot
colorsRI = colorRampPalette(c("orange", "light blue"))(100) # Get some colors for the plot
boxplot(RI.value ~ lockdown.policy, data = ri.dt, ylab = "RI value",
xlab = "Lockdown Policy Level", col =c(colorsRI[1], colorsRI[80], colorsRI[100]),
main = "RI Values with Lockdown Policy")
#Create the pdf file
dev.off()
#====================================TRYOUT STUFF=======================================
# # ===========IMPORTANT!!!!!!!=======================
# ####Look at this later to set up a for loop to reduce the code density
# name <- vector(mode = "list", length = 6)
# countries <- c("Sweden", "Japan", "South_Korea", "Taiwan", "Tajikistan", "Brazil")
# name[[1]] <- separated.dt$Sweden
# name[[2]] <- separated.dt$Japan
# name[[3]] <- separated.dt$South_Korea
# name[[4]] <- separated.dt$Taiwan
# name[[5]] <- separated.dt$Tajikistan
# name[[6]] <- separated.dt$Brazil
# # Set up a function that plots the time series plots
# f.timeseriesPlot <- function(DATA, colour, TITLE, countries.vector){
#   # Call the pdf command to start the plot
#   pdf(file = paste(path.figures,"cases.pdf", sep = ""),   # The directory you
#       # want to save the file in
#       width = 10, # The width of the plot in inches
#       height = 7) # The height of the plot in inches
#
#   generate.colors2 = colorRampPalette(c("blue", colour))(100)
#   colours2 = c(generate.colors[1], generate.colors[17], generate.colors[34],
#                generate.colors[69],generate.colors[85], generate.colors[99])
#
#   plot(NA, xlim = c(30,311), ylim = c(0,16), type = "l", xlab = "", ylab = "log(COVID-19 cases)",
#        main = TITLE,  xaxt = "n", yaxt = "n", bty = "n", las = 1)
#   box(lty = 'solid', col = 'black')
#   legend("topright", countries.vector, pch = c(19, 19, 19, 19, 19, 19),
#          col = colours2)
#   axis(2, seq(0, 14, by=2), seq(0, 14, by=2))
#   axis(1, seq(0, 311, by = 26), c("Nov '19", "Jan '20", "Feb '20", "Mar '20", "Apr '20", "May '20",
#                                   "Jun '20", "Jul '20", "Aug '20", "Sep '20", "Oct '20", "Nov '20"),
#        las = 2, hadj = 1)
#   for (i in 1:6){
#     i = 1
#     points(log(DATA[[i]]$cases), type = "l", col = generate.colors[99])
#     #Create the pdf file
#     dev.off()}
#   }
#
#
#
# f.timeseriesPlot(
#   DATA = name,
#   colour = "red",
#   TITLE = "Countries with no lockdown",
#   countries.vector = countries
# )
#==============================================================================
# Here we create all the visualizations in our project
# We start by creating all the time series plots and then the
# box and whisker plots for the RI values
# Load the Analysis.R file
# This will create the data needed to blot the box and whisker plots
source('Analysis.R')
# Load the data into R
cases.dt <- read.csv(paste(path.cleaned,"casesData.csv", sep = ""))
# Make sure the data are grouped by country
by.country = cases.dt %>% group_by(country)
# Split the whole data set into a new data set containing data frames for
# for each country
separated.dt = split(cases.dt, cases.dt$country, drop = F)
# Call the pdf command to start the plot
pdf(file = paste(path.figures,"cases.pdf", sep = ""),   # The directory you
# want to save the file in
width = 10, # The width of the plot in inches
height = 7) # The height of the plot in inches
#=================================================================================================
# --countries with intermediate lockdown
generate.colors1 = colorRampPalette(c("blue", "red"))(100)
colours1 = c(generate.colors1[1], generate.colors1[17], generate.colors1[34],
generate.colors1[69],generate.colors1[85], generate.colors1[99])
plot(NA, xlim = c(30,311), ylim = c(0,16), type = "l", xlab = "", ylab = "log(COVID-19 cases)",
main = "Intermediate Lockdown Policy Countries ",  xaxt = "n", yaxt = "n", bty = "n", las = 1)
box(lty = 'solid', col = 'black')
legend("topright", c("Canada", "Poland", "Czech Republic", "Australia",
"United Kingdom", "Malaysia"), pch = c(19, 19, 19, 19, 19, 19),
col = colours1)
axis(2, seq(0, 14, by=2), seq(0, 14, by=2))
axis(1, seq(0, 311, by = 26), c("Nov '19", "Jan '20", "Feb '20", "Mar '20", "Apr '20", "May '20",
"Jun '20", "Jul '20", "Aug '20", "Sep '20", "Oct '20", "Nov '20"),
las = 2, hadj = 1)
points(log(separated.dt$Canada$cases), type = "l", col = generate.colors1[1])
points(log(separated.dt$Poland$cases), type = "l", col = generate.colors1[17])
points(log(separated.dt$Czechia$cases), type = "l", col = generate.colors1[34])
points(log(separated.dt$Australia$cases), type = "l", col = generate.colors1[69])
points(log(separated.dt$United_Kingdom$cases), type = "l", col = generate.colors1[85])
points(log(separated.dt$Malaysia$cases), type = "l", col = generate.colors1[99])
#===================================================================================================
# --countries with stringent lockdown policies
generate.colors = colorRampPalette(c("purple", "green"))(100)
colours = c(generate.colors[1], generate.colors[17], generate.colors[34],
generate.colors[69],generate.colors[85], generate.colors[99])
# We want tp custo
plot(NA, xlim = c(30,311), ylim = c(0,16), type = "l", xlab = "", ylab = "log(COVID-19 cases)",
main = "Full Lockdown Policy Countries ",  xaxt = "n", yaxt = "n", bty = "n", las = 1)
box(lty = 'solid', col = 'black')
legend("topright", c("India", "Singapore", "Italy", "New Zealand",
"South Africa", "Netherlands"), pch = c(19, 19, 19, 19, 19, 19),
col = colours)
axis(2, seq(0, 14, by=2), seq(0, 14, by=2))
axis(1, seq(0, 311, by = 26), c("Nov '19", "Jan '20", "Feb '20", "Mar '20", "Apr '20", "May '20",
"Jun '20", "Jul '20", "Aug '20", "Sep '20", "Oct '20", "Nov '20"),
las = 2, hadj = 1)
points(log(separated.dt$India$cases), type = "l", col = generate.colors[1])
points(log(separated.dt$Singapore$cases), type = "l", col = generate.colors[17])
points(log(separated.dt$Italy$cases), type = "l", col = generate.colors[34])
points(log(separated.dt$New_Zealand$cases), type = "l", col = generate.colors[69])
points(log(separated.dt$South_Africa$cases), type = "l", col = generate.colors[85])
points(log(separated.dt$Netherlands$cases), type = "l", col = generate.colors[99])
#========================================================================================
#--Countries with no lockdown policy--
# Generate a vector containing the colors for our different plots
generate.colors2 = colorRampPalette(c("brown", "orange"))(100)
# Now select a few colors from the vector we created
colours2 = c(generate.colors[1], generate.colors[17], generate.colors[34],
generate.colors[69],generate.colors[85], generate.colors[99])
plot(NA, xlim = c(30,311), ylim = c(0,16), type = "l", xlab = "", ylab = "log(COVID-19 cases)",
main = "No Lockdown Policy Countries ",  xaxt = "n", yaxt = "n", bty = "n", las = 1)
box(lty = 'solid', col = 'black')
legend("topright", c("Sweden", "Japan", "South Korea", "Taiwan",
"Tajikistan", "Brazil"), pch = c(19, 19, 19, 19, 19, 19),
col = colours2)
axis(2, seq(0, 14, by=2), seq(0, 14, by=2))
axis(1, seq(0, 311, by = 26), c("Nov '19", "Jan '20", "Feb '20", "Mar '20", "Apr '20", "May '20",
"Jun '20", "Jul '20", "Aug '20", "Sep '20", "Oct '20", "Nov '20"),
las = 2, hadj = 1)
points(log(separated.dt$Sweden$cases), type = "l", col = generate.colors[1])
points(log(separated.dt$Japan$cases), type = "l", col = generate.colors[17])
points(log(separated.dt$South_Korea$cases), type = "l", col = generate.colors[34])
points(log(separated.dt$Taiwan$cases), type = "l", col = generate.colors[69])
points(log(separated.dt$Tajikistan$cases), type = "l", col = generate.colors[85])
points(log(separated.dt$Brazil$cases), type = "l", col = generate.colors[99])
#Create the pdf file
dev.off()
# Visualize the RI values using a boxplot
# Load the data into R
ri.dt = read.csv(paste(path.cleaned,"RIdata.csv", sep = ""))
# Call the pdf command to start the plot
pdf(file = paste(path.figures,"RIvalues.pdf", sep = ""),   # The directory you want to save the file in
width = 10, # The width of the plot in inches
height = 7) # The height of the plot in inches
# Plot the box plot
colorsRI = colorRampPalette(c("orange", "light blue"))(100) # Get some colors for the plot
boxplot(RI.value ~ lockdown.policy, data = ri.dt, ylab = "RI value",
xlab = "Lockdown Policy Level", col =c(colorsRI[1], colorsRI[80], colorsRI[100]),
main = "RI Values with Lockdown Policy")
#Create the pdf file
dev.off()
#====================================TRYOUT STUFF=======================================
# # ===========IMPORTANT!!!!!!!=======================
# ####Look at this later to set up a for loop to reduce the code density
# name <- vector(mode = "list", length = 6)
# countries <- c("Sweden", "Japan", "South_Korea", "Taiwan", "Tajikistan", "Brazil")
# name[[1]] <- separated.dt$Sweden
# name[[2]] <- separated.dt$Japan
# name[[3]] <- separated.dt$South_Korea
# name[[4]] <- separated.dt$Taiwan
# name[[5]] <- separated.dt$Tajikistan
# name[[6]] <- separated.dt$Brazil
# # Set up a function that plots the time series plots
# f.timeseriesPlot <- function(DATA, colour, TITLE, countries.vector){
#   # Call the pdf command to start the plot
#   pdf(file = paste(path.figures,"cases.pdf", sep = ""),   # The directory you
#       # want to save the file in
#       width = 10, # The width of the plot in inches
#       height = 7) # The height of the plot in inches
#
#   generate.colors2 = colorRampPalette(c("blue", colour))(100)
#   colours2 = c(generate.colors[1], generate.colors[17], generate.colors[34],
#                generate.colors[69],generate.colors[85], generate.colors[99])
#
#   plot(NA, xlim = c(30,311), ylim = c(0,16), type = "l", xlab = "", ylab = "log(COVID-19 cases)",
#        main = TITLE,  xaxt = "n", yaxt = "n", bty = "n", las = 1)
#   box(lty = 'solid', col = 'black')
#   legend("topright", countries.vector, pch = c(19, 19, 19, 19, 19, 19),
#          col = colours2)
#   axis(2, seq(0, 14, by=2), seq(0, 14, by=2))
#   axis(1, seq(0, 311, by = 26), c("Nov '19", "Jan '20", "Feb '20", "Mar '20", "Apr '20", "May '20",
#                                   "Jun '20", "Jul '20", "Aug '20", "Sep '20", "Oct '20", "Nov '20"),
#        las = 2, hadj = 1)
#   for (i in 1:6){
#     i = 1
#     points(log(DATA[[i]]$cases), type = "l", col = generate.colors[99])
#     #Create the pdf file
#     dev.off()}
#   }
#
#
#
# f.timeseriesPlot(
#   DATA = name,
#   colour = "red",
#   TITLE = "Countries with no lockdown",
#   countries.vector = countries
# )
# ====================== Description and R version ============================
#
# This is a project where I analyze daily weather data for Squamish, Pemberton
# and North Vancouver.
#
R.version.string
#   "R version 3.6.3 (2020-02-29)"
#
# =============================================================================
# NOTES
# * In this program, I study the relationship between lock down policy and the
#   spread of Covid-19.
#
#
# =============================================================================
# Global Vars
# Set the project's directory as a global variable so that it can be accessed
# easily by other scripts->improves folder management
main.dir <- getwd()
# =============================================================================
# Libraries
# install libraries needed for the project
# install.packages("utils")
# Load the important packages into the workspace
library(utils)
library(tidyverse)
library(lubridate)
library(dplyr)
# ======================= STRUCTURING THE FOLDERS =============================
# store names of the folders in a vector
folders.vector <- c("raw.covid.data","cleaned.covid.data",
"figures.covid.data", "results.covid.data")
# and make the folders if they don't exit yet. No need to understand this now
for(i in 1:length(folders.vector)){
if(file.exists(folders.vector[i]) == FALSE){
dir.create(folders.vector[i])
}
}
# determine the paths to the created folders
path.raw <- paste(main.dir, "/", folders.vector[1], "/", sep = "")
path.cleaned <- paste(main.dir, "/", folders.vector[2], "/", sep = "")
path.figures <- paste(main.dir, "/", folders.vector[3], "/", sep = "")
path.results <- paste(main.dir, "/", folders.vector[4], "/", sep = "")
# =============================================================================
# Run the other scripts for the program
# Run the file that handles the all the statistical analyses on the data
# Run this here
# source("Analysis.R")
#==============================================================================
# Save the data locally into a csv file
d.t <- read.csv("https://opendata.ecdc.europa.eu/covid19/casedistribution/csv",
na.strings = "", fileEncoding = "UTF-8-BOM")
# Write the downloaded data to a csv file locally
write.csv(d.t, paste(path.raw,"raw.data.csv", sep = ""),
row.names = FALSE)
#================================= END ========================================
#==============================================================================
# This script will clean up our raw data
# We will extract only the column we need and
# then remove zeros and NA s
#read the Dataset sheet into “R”. The dataset will be called "d.t.raw"
d.t.raw <- read.csv(paste(path.raw,"raw.data.csv", sep = ""),
stringsAsFactors = FALSE, strip.white = TRUE)
# Convert the data frame to a tibble for us to view it easily
# through the console
d.t = as_tibble(d.t.raw)
# Convert the dates to legal R dates
# This will help with the further operations on this column
d.t$dateRep = dmy(d.t$dateRep)
# Now the data frame is huge. Most of the columns we won't even
# use, so we will select only the columns we need
# and create a data structure from those ones.
# Create a new file that will keep cases, dates and countries
# Extract the dates from the main data file
date = d.t$dateRep
# Extract the cases data data from the main data file
cases = d.t$cases
# Extract the countries data
country = d.t$countriesAndTerritories
# Create a new data frame containing only the dates, cases, and countries
casesData = data.frame(date, cases, country)
# Remove zeros and NA s
casesData[casesData == 0] = NA # convert zeros into NA
casesData.no.na = na.omit(casesData)   # remove NA
# Convert the dates in data structure into legal dates in R
casesData.clean = casesData.no.na[order(as.Date(casesData.no.na$date,
format="%y/%m/%d")),]
# Write the clean data on to a csv file
# This will help create a local copy that other methods can access
# or when we do not have internet access.
write.csv(casesData.clean, paste(path.cleaned,"casesData.csv", sep = ""),
row.names = FALSE)
#==============================================================================
# Here we create all the visualizations in our project
# We start by creating all the time series plots and then the
# box and whisker plots for the RI values
# Load the Analysis.R file
# This will create the data needed to blot the box and whisker plots
source('Analysis.R')
# Load the data into R
cases.dt <- read.csv(paste(path.cleaned,"casesData.csv", sep = ""))
# Make sure the data are grouped by country
by.country = cases.dt %>% group_by(country)
# Split the whole data set into a new data set containing data frames for
# for each country
separated.dt = split(cases.dt, cases.dt$country, drop = F)
# Call the pdf command to start the plot
pdf(file = paste(path.figures,"cases.pdf", sep = ""),   # The directory you
# want to save the file in
width = 10, # The width of the plot in inches
height = 7) # The height of the plot in inches
#=================================================================================================
# --countries with intermediate lockdown
generate.colors1 = colorRampPalette(c("blue", "red"))(100)
colours1 = c(generate.colors1[1], generate.colors1[17], generate.colors1[34],
generate.colors1[69],generate.colors1[85], generate.colors1[99])
plot(NA, xlim = c(30,311), ylim = c(0,16), type = "l", xlab = "", ylab = "log(COVID-19 cases)",
main = "Intermediate Lockdown Policy Countries ",  xaxt = "n", yaxt = "n", bty = "n", las = 1)
box(lty = 'solid', col = 'black')
legend("topright", c("Canada", "Poland", "Czech Republic", "Australia",
"United Kingdom", "Malaysia"), pch = c(19, 19, 19, 19, 19, 19),
col = colours1)
axis(2, seq(0, 14, by=2), seq(0, 14, by=2))
axis(1, seq(0, 311, by = 26), c("Nov '19", "Jan '20", "Feb '20", "Mar '20", "Apr '20", "May '20",
"Jun '20", "Jul '20", "Aug '20", "Sep '20", "Oct '20", "Nov '20"),
las = 2, hadj = 1)
points(log(separated.dt$Canada$cases), type = "l", col = generate.colors1[1])
points(log(separated.dt$Poland$cases), type = "l", col = generate.colors1[17])
points(log(separated.dt$Czechia$cases), type = "l", col = generate.colors1[34])
points(log(separated.dt$Australia$cases), type = "l", col = generate.colors1[69])
points(log(separated.dt$United_Kingdom$cases), type = "l", col = generate.colors1[85])
points(log(separated.dt$Malaysia$cases), type = "l", col = generate.colors1[99])
#===================================================================================================
# --countries with stringent lockdown policies
generate.colors = colorRampPalette(c("purple", "green"))(100)
colours = c(generate.colors[1], generate.colors[17], generate.colors[34],
generate.colors[69],generate.colors[85], generate.colors[99])
# We want tp custo
plot(NA, xlim = c(30,311), ylim = c(0,16), type = "l", xlab = "", ylab = "log(COVID-19 cases)",
main = "Full Lockdown Policy Countries ",  xaxt = "n", yaxt = "n", bty = "n", las = 1)
box(lty = 'solid', col = 'black')
legend("topright", c("India", "Singapore", "Italy", "New Zealand",
"South Africa", "Netherlands"), pch = c(19, 19, 19, 19, 19, 19),
col = colours)
axis(2, seq(0, 14, by=2), seq(0, 14, by=2))
axis(1, seq(0, 311, by = 26), c("Nov '19", "Jan '20", "Feb '20", "Mar '20", "Apr '20", "May '20",
"Jun '20", "Jul '20", "Aug '20", "Sep '20", "Oct '20", "Nov '20"),
las = 2, hadj = 1)
points(log(separated.dt$India$cases), type = "l", col = generate.colors[1])
points(log(separated.dt$Singapore$cases), type = "l", col = generate.colors[17])
points(log(separated.dt$Italy$cases), type = "l", col = generate.colors[34])
points(log(separated.dt$New_Zealand$cases), type = "l", col = generate.colors[69])
points(log(separated.dt$South_Africa$cases), type = "l", col = generate.colors[85])
points(log(separated.dt$Netherlands$cases), type = "l", col = generate.colors[99])
#========================================================================================
#--Countries with no lockdown policy--
# Generate a vector containing the colors for our different plots
generate.colors2 = colorRampPalette(c("brown", "orange"))(100)
# Now select a few colors from the vector we created
colours2 = c(generate.colors[1], generate.colors[17], generate.colors[34],
generate.colors[69],generate.colors[85], generate.colors[99])
plot(NA, xlim = c(30,311), ylim = c(0,16), type = "l", xlab = "", ylab = "log(COVID-19 cases)",
main = "No Lockdown Policy Countries ",  xaxt = "n", yaxt = "n", bty = "n", las = 1)
box(lty = 'solid', col = 'black')
legend("topright", c("Sweden", "Japan", "South Korea", "Taiwan",
"Tajikistan", "Brazil"), pch = c(19, 19, 19, 19, 19, 19),
col = colours2)
axis(2, seq(0, 14, by=2), seq(0, 14, by=2))
axis(1, seq(0, 311, by = 26), c("Nov '19", "Jan '20", "Feb '20", "Mar '20", "Apr '20", "May '20",
"Jun '20", "Jul '20", "Aug '20", "Sep '20", "Oct '20", "Nov '20"),
las = 2, hadj = 1)
points(log(separated.dt$Sweden$cases), type = "l", col = generate.colors[1])
points(log(separated.dt$Japan$cases), type = "l", col = generate.colors[17])
points(log(separated.dt$South_Korea$cases), type = "l", col = generate.colors[34])
points(log(separated.dt$Taiwan$cases), type = "l", col = generate.colors[69])
points(log(separated.dt$Tajikistan$cases), type = "l", col = generate.colors[85])
points(log(separated.dt$Brazil$cases), type = "l", col = generate.colors[99])
#Create the pdf file
dev.off()
# Visualize the RI values using a boxplot
# Load the data into R
ri.dt = read.csv(paste(path.cleaned,"RIdata.csv", sep = ""))
# Call the pdf command to start the plot
pdf(file = paste(path.figures,"RIvalues.pdf", sep = ""),   # The directory you want to save the file in
width = 10, # The width of the plot in inches
height = 7) # The height of the plot in inches
# Plot the box plot
colorsRI = colorRampPalette(c("orange", "light blue"))(100) # Get some colors for the plot
boxplot(RI.value ~ lockdown.policy, data = ri.dt, ylab = "RI value",
xlab = "Lockdown Policy Level", col =c(colorsRI[1], colorsRI[80], colorsRI[100]),
main = "RI Values with Lockdown Policy")
#Create the pdf file
dev.off()
#====================================TRYOUT STUFF=======================================
# # ===========IMPORTANT!!!!!!!=======================
# ####Look at this later to set up a for loop to reduce the code density
# name <- vector(mode = "list", length = 6)
# countries <- c("Sweden", "Japan", "South_Korea", "Taiwan", "Tajikistan", "Brazil")
# name[[1]] <- separated.dt$Sweden
# name[[2]] <- separated.dt$Japan
# name[[3]] <- separated.dt$South_Korea
# name[[4]] <- separated.dt$Taiwan
# name[[5]] <- separated.dt$Tajikistan
# name[[6]] <- separated.dt$Brazil
# # Set up a function that plots the time series plots
# f.timeseriesPlot <- function(DATA, colour, TITLE, countries.vector){
#   # Call the pdf command to start the plot
#   pdf(file = paste(path.figures,"cases.pdf", sep = ""),   # The directory you
#       # want to save the file in
#       width = 10, # The width of the plot in inches
#       height = 7) # The height of the plot in inches
#
#   generate.colors2 = colorRampPalette(c("blue", colour))(100)
#   colours2 = c(generate.colors[1], generate.colors[17], generate.colors[34],
#                generate.colors[69],generate.colors[85], generate.colors[99])
#
#   plot(NA, xlim = c(30,311), ylim = c(0,16), type = "l", xlab = "", ylab = "log(COVID-19 cases)",
#        main = TITLE,  xaxt = "n", yaxt = "n", bty = "n", las = 1)
#   box(lty = 'solid', col = 'black')
#   legend("topright", countries.vector, pch = c(19, 19, 19, 19, 19, 19),
#          col = colours2)
#   axis(2, seq(0, 14, by=2), seq(0, 14, by=2))
#   axis(1, seq(0, 311, by = 26), c("Nov '19", "Jan '20", "Feb '20", "Mar '20", "Apr '20", "May '20",
#                                   "Jun '20", "Jul '20", "Aug '20", "Sep '20", "Oct '20", "Nov '20"),
#        las = 2, hadj = 1)
#   for (i in 1:6){
#     i = 1
#     points(log(DATA[[i]]$cases), type = "l", col = generate.colors[99])
#     #Create the pdf file
#     dev.off()}
#   }
#
#
#
# f.timeseriesPlot(
#   DATA = name,
#   colour = "red",
#   TITLE = "Countries with no lockdown",
#   countries.vector = countries
# )
